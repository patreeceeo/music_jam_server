<!-- TODO turn this into component -->
<svg class="instrument" preserveAspectRatio="xMidYMid meet" viewBox={@fretboard.viewbox}>
  <defs>
    <linearGradient id="fretboard" x1="42%" y1="0%" x2="0%" y2="90%">
      <stop offset="0%" style="stop-color: rgb(56, 53, 53);" />
      <stop offset="100%" style="stop-color: rgb(76, 73, 73);" />
    </linearGradient>

    <linearGradient id="fret" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color: rgb(160, 140, 130);" />
      <stop offset="100%" style="stop-color: rgb(120, 100, 90);" />
    </linearGradient>

    <filter id="dropshadowFretboard" height="400%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
      <feOffset dx="8" dy="8" result="offsetblur" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.5" />
      </feComponentTransfer>
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>

    <filter id="dropshadowFret" height="400%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
      <feOffset dx="4" dy="4" result="offsetblur" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.3" />
      </feComponentTransfer>
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
  </defs>

  <polygon
    points={@fretboard.exterior_points()}
    fill="url(#fretboard)"
    style="filter: url(#dropshadowFretboard);"
    stroke-linejoin="round"
  />

  <path
    d={@fretboard.frets_path()}
    stroke-width="10"
    stroke="url(#fret)"
    style="filter: url(#dropshadowFret);"
  />

  <%= for {string, string_index} <- Enum.with_index(@fretboard.strings()) do %>
  <%= for {note, note_index} <- Enum.with_index(string) do %>
  <%= if @fretboard.is_inlay_fret?(note_index) do %>
    <circle
      cx={@fretboard.fret_distance(note_index) + @fretboard.fret_width(note_index) / 2}
      cy={@fretboard.height / 2}
      r={16}
      fill="rgba(0, 0, 0, 0.05)"
    />
  <% end %>
      <rect
        x={@fretboard.fret_distance(note_index)}
        y={(string_index + 1) * 28}
        width={@fretboard.fret_width(note_index)}
        height="8"
        fill={if string_index === @playing_string_index, do: "red", else: "rgba(200, 200, 200, 0.6)"}
        data-role="play-voice"
        data-pitch={to_scalar(note)}
        phx-click={JS.push("play_voice", value: %{ string_index: string_index } )}
      />
    <% end %>
  <% end %>
</svg>
